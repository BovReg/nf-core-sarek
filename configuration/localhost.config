/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 * Nextflow config file for CAW project
 * working on a local host on UPPMAX
 * -------------------------------------------------
 * Adjust CPU and memory requirements according to your needs
 * -------------------------------------------------
 * This setting is for a typical test laptop: 8 CPUs and 16G mem.
 * If you have more memory and/or CPUs, adjust accordingly
 * Same also for large compute nodes.
 * -------------------------------------------------
 */

env {
  NXF_OPTS="-Xms1g -Xmx4g"
  NXF_WORK="/scratch"
}

params {
  singleCPUMem  = 8.GB
  genome = 'GRCh37'
  genomes {
    'GRCh37' {
      bundleDir     = '/sw/data/uppnex/ToolBox/ReferenceAssemblies/hg38make/bundle/2.8/b37'
    }
    'GRCh38' {
      bundleDir     = '/sw/data/uppnex/ToolBox/hg38bundle'
    }
  }
}

process {
  cpus = 16 			// this is the default for example when a multithreaded process uses all the available CPUs
  errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
  maxErrors = '-1'
  maxForks = 2		// number of processess launched. If your process is using only a single CPU, and not that much memory, you can increase this value
  maxRetries = 3
  memory = 240.GB	// default assigned memory value for a single process

  $RunFastQC {
    module = ['bioinfo-tools', 'FastQC/0.11.5']
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $MapReads {
    module = ['bioinfo-tools', 'bwa/0.7.15', 'samtools/1.3']
    memory = {params.singleCPUMem * task.attempt}
  }
  $MergeBams {
    module = ['bioinfo-tools', 'samtools/1.3']
    memory = {params.singleCPUMem * task.attempt}
  }
  $MarkDuplicates {
    module = ['bioinfo-tools', 'picard/2.0.1']
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RealignerTargetCreator {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'GATK/3.7']
    memory = {params.singleCPUMem * 4 * task.attempt}
    cpus = 4
  }
  $IndelRealigner {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'GATK/3.7']
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $CreateRecalibrationTable {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'GATK/3.7']
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RecalibrateBam {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'GATK/3.7']
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunSamtoolsStats {
    module = ['bioinfo-tools', 'samtools/1.3']
    cpus = 1
  }
  $RunHaplotypecaller {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'GATK/3.7']
    cpus = 1
    memory = {params.singleCPUMem * task.attempt * task.attempt } // this way the memory will increase quadratically as 8G, 32G, 72G
    maxForks = 16	// if you are running out of memory on a single node, due to task re-runs, decrease this value
  }
  $RunMutect1 {
    module = ['bioinfo-tools', 'java/sun_jdk1.7.0_25', 'mutect/1.1.5']
    cpus = 1
    maxForks = 16
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunMutect2 {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'GATK/3.7']
    cpus = 1
    maxForks = 16
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunFreeBayes {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'freebayes/1.0.2']
    cpus = 1
    maxForks = 16
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunVardict {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'R/3.2.3', 'gcc/4.9.2', 'perl/5.18.4']
    cpus = 1
    maxForks = 8
    memory = {params.singleCPUMem * task.attempt}
  }
  $ConcatVCF {
    module = ['bioinfo-tools', 'java/sun_jdk1.8.0_92', 'GATK/3.7', 'picard/2.0.1']
    memory = {params.singleCPUMem * 6 * task.attempt}
    cpus = 1
  }
  $RunStrelka {
    module = ['bioinfo-tools', 'strelka/1.0.15']
  }
  $RunManta {
    module = ['bioinfo-tools', 'samtools/1.3', 'manta/1.0.3']
  }
  $RunAlleleCount {
    module = ['bioinfo-tools', 'alleleCount/2.2.0']
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunConvertAlleleCounts {
    module = ['R/3.2.3']
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunAscat {
    module = ['R/3.3.2']
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunSnpeff {
    cpus = 1
    module = ['bioinfo-tools', 'snpEff/4.2']
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunMultiQC {
    cpus = 1
    module = ['bioinfo-tools', 'MultiQC/0.9']
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
}
