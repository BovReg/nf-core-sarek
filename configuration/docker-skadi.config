/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 * Nextflow config file for CAW project
 * working on milou (UPPMAX)
 * -------------------------------------------------
 * Should be saved either within CAW installation
 * as nextflow.config, or with Nextflow installation
 * as $NXF_HOME/config
 */

env {
  NXF_OPTS="-Xms1g -Xmx4g"
}

docker {
  enabled = true
}

executor {
  name = 'local'
  queueSize = 1
  pollInterval = '30 sec'
}

process {
  cpus = 8
  memory = 15.GB
  time = 1.h

  errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
  maxRetries = 3
  maxErrors = '-1'

  $RunFastQC {
    container = 'maxulysse/fastqc:dev'
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $MapReads {
    container = 'maxulysse/mapreads:dev'
    time = {params.runTime * task.attempt}
  }
  $MergeBams {
    container = 'maxulysse/samtools:dev'
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * task.attempt}
  }
  $MarkDuplicates {
    container = 'maxulysse/picard:dev'
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * 8 * task.attempt}
  }
  $CreateIntervals {
    container = 'maxulysse/gatk:dev'
    time = {params.runTime * task.attempt}
  }
  $RealignBams {
    container = 'maxulysse/gatk:dev'
    time = {params.runTime * task.attempt}
  }
  $CreateRecalibrationTable {
    container = 'maxulysse/gatk:dev'
    time = {params.runTime * task.attempt}
  }
  $RecalibrateBam {
    container = 'maxulysse/gatk:dev'
    time = {params.runTime * task.attempt}
  }
  $RunSamtoolsStats {
    container = 'maxulysse/samtools:1.3'
    time = {params.runTime * task.attempt}
  }
  $RunHaplotypecaller {
    container = 'maxulysse/gatk:dev'
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * 8 *task.attempt}
  }
  $RunMutect1 {
    container = 'maxulysse/mutect1:dev'
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunMutect2 {
    container = 'maxulysse/gatk:dev'
    time = {params.runTime * task.attempt}
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  // $RunFreeBayes {
  //   module = ['bioinfo-tools', 'java/sun_jdk1.8.0_40', 'freebayes/1.0.2']
  //   time = {params.runTime * task.attempt}
  //   cpus = 1
  //   memory = {params.singleCPUMem * 4 * task.attempt}
  // }
  // $RunVardict {
  //   module = ['bioinfo-tools', 'java/sun_jdk1.8.0_40', 'R/3.2.3', 'gcc/4.9.2', 'perl/5.18.4']
  //   time = {params.runTime * task.attempt}
  //   cpus = 1
  //   memory = {params.singleCPUMem * 4 * task.attempt}
  // }
  $ConcatVCF {
    container = 'maxulysse/gatk:dev'
  }
  $RunStrelka {
    container = 'maxulysse/strelka:dev'
    time = {params.runTime * task.attempt}
  }
  $RunManta {
    container = 'maxulysse/runmanta:dev'
  }
  $RunAlleleCount {
    container = 'maxulysse/runallelecount:dev'
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunConvertAlleleCounts {
    container = 'maxulysse/runconvertallelecounts:dev'
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunAscat {
  container = 'maxulysse/runascat:dev'
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunSnpeff {
    container = 'maxulysse/snpeff:dev'
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunMultiQC {
    container = 'maxulysse/multiqc:dev'
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
}

params {
  runTime       = 2.h
  singleCPUMem  = 1.5.GB

  acLoci        = '/home/max/ReferenceAssemblies/hg38make/b37/1000G_phase3_20130502_SNP_maf0.3.loci'
  cosmic        = '/home/max/ReferenceAssemblies/hg38make/b37/b37_cosmic_v74.noCHR.sort.4.1.vcf'
  cosmicIndex   = '/home/max/ReferenceAssemblies/hg38make/b37/b37_cosmic_v74.noCHR.sort.4.1.vcf.idx'
  dbsnp         = '/home/max/ReferenceAssemblies/hg38make/b37/dbsnp_138.b37.vcf'
  dbsnpIndex    = '/home/max/ReferenceAssemblies/hg38make/b37/dbsnp_138.b37.vcf.idx'
  genome        = '/home/max/ReferenceAssemblies/hg38make/b37/human_g1k_v37_decoy.fasta'
  genomeAmb     = '/home/max/ReferenceAssemblies/hg38make/b37/human_g1k_v37_decoy.fasta.amb'
  genomeAnn     = '/home/max/ReferenceAssemblies/hg38make/b37/human_g1k_v37_decoy.fasta.ann'
  genomeBwt     = '/home/max/ReferenceAssemblies/hg38make/b37/human_g1k_v37_decoy.fasta.bwt'
  genomeDict    = '/home/max/ReferenceAssemblies/hg38make/b37/human_g1k_v37_decoy.dict'
  genomeIndex   = '/home/max/ReferenceAssemblies/hg38make/b37/human_g1k_v37_decoy.fasta.fai'
  genomePac     = '/home/max/ReferenceAssemblies/hg38make/b37/human_g1k_v37_decoy.fasta.pac'
  genomeSa      = '/home/max/ReferenceAssemblies/hg38make/b37/human_g1k_v37_decoy.fasta.sa'
  intervals     = "/home/max/ReferenceAssemblies/hg38make/b37/centromeres.list"
  kgIndels      = '/home/max/ReferenceAssemblies/hg38make/b37/1000G_phase1.indels.b37.vcf'
  kgIndex       = '/home/max/ReferenceAssemblies/hg38make/b37/1000G_phase1.indels.b37.vcf.idx'
  mantaIndex    = '/home/max/ReferenceAssemblies/hg38make/b37/MANTA_human_g1k_v37_decoy.fasta.fai'
  mantaRef      = '/home/max/ReferenceAssemblies/hg38make/b37/MANTA_human_g1k_v37_decoy.fasta'
  millsIndels   = '/home/max/ReferenceAssemblies/hg38make/b37/Mills_and_1000G_gold_standard.indels.b37.vcf'
  millsIndex    = '/home/max/ReferenceAssemblies/hg38make/b37/Mills_and_1000G_gold_standard.indels.b37.vcf.idx'
  snpeffDb      = 'GRCh37.75'
  vardictHome   = '/home/max/workspace/'
}
