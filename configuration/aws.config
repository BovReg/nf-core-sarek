/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 *  Nextflow config file for Amazon Web Services
 * -------------------------------------------------
 * Imported under the 'aws' Nextflow profile in nextflow.config
 * Defines reference genomes, using paths from s3
 * To be use with AWS Batch
 */

params {
  genome_base = params.genome == 'GRCh37' ? "s3://caw-references/grch37" : params.genome == 'GRCh38' ? "s3://caw-references/grch38" : "s3://caw-references/smallgrch37"
}

process {
  executor = 'awsbatch'
  queue = 'my-batch-queue'

  errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
  maxErrors = '-1'
  maxRetries = 3

  $ConcatVCF {
  }
  $IndelRealigner {
    cpus = 1
    memory = {task.memory * task.attempt}
  }
  $MapReads {
  }
  $MarkDuplicates {
    memory = {task.memory * task.attempt}
  }
  $MergeBams {
  }
  $RealignerTargetCreator {
    cpus = 4
    memory = {task.memory * 2 * task.attempt}
  }
  $RecalibrateBam {
    memory = {task.memory * task.attempt}
  }
  $RunAlleleCount {
    memory = {task.memory * task.attempt}
  }
  $RunAscat {
    memory = {task.memory * task.attempt}
  }
  $RunBamQC {
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
  $RunBcftoolsStats {
  }
  $RunConvertAlleleCounts {
    memory = {task.memory * task.attempt}
  }
  $RunFastQC {
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
  $RunFreeBayes {
    cpus = 1
    memory = {task.memory * task.attempt}
  }
  $RunHaplotypecaller {
    // Increase memory quadratically
    memory = {task.memory * task.attempt * task.attempt}
  }
  $RunGenotypeGVCFs {
  }
  $RunManta {
  }
  $RunMultiQC {
  }
  $RunMutect1 {
    cpus = 1
    memory = {task.memory * task.attempt}
  }
  $RunMutect2 {
    cpus = 1
    memory = {task.memory * task.attempt}
  }
  $RunSamtoolsStats {
  }
  $RunSingleManta {
  }
  $RunSingleStrelka {
  }
  $RunSnpeff {
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
  $RunStrelka {
  }
  $RunVEP {
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
}
